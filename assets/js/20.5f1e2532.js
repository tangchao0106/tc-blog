(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{411:function(e,t,n){"use strict";n.r(t);var r=n(2),s=Object(r.a)({},(function(){var e=this._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[e("ul",[e("li",[e("p",[this._v("用 JavaScript 对象描述 DOM 的层次结构，DOM 中的一切属性都在虚拟 DOM 中有对应的属性\ndiff 是发生在虚拟 DOM 上的，新旧虚拟 dom 对比计算出最小更新，最后反映到真实的 DOM 上\n-1 key 是节点的唯一标识，告诉 difff 算法，在更改前后他们是同一个 DOM 节点。\n-1 只有同一虚拟节点，才能进行精益化比较--如何定义同一个虚拟节点，选择器相同且 key 相同\n-1 只进行同一层次比较，不会进行跨层比较。")]),this._v(" "),e("h4",{attrs:{id:"模板编译后得到-render-函数-render-函数返回-vnode-虚拟-dome-节点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#模板编译后得到-render-函数-render-函数返回-vnode-虚拟-dome-节点"}},[this._v("#")]),this._v(" 模板编译后得到 render()函数，，render 函数返回 vnode 虚拟 dome 节点")]),this._v(" "),e("p",[this._v("真实 dom 属性很多，操作重，vnode，定义的一个对象属性少，操作轻，，节点与节点的比较，有差异了再更新")])])])])}),[],!1,null,null,null);t.default=s.exports}}]);